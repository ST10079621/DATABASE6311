CREATE TABLE INSTRUCTOR(
INS_ID INT PRIMARY KEY,
INS_FNAME VARCHAR(50) NOT NULL, 
INS_CONTACT VARCHAR(50) NOT NULL,
INS_LEVEL VARCHAR(50) NOT NULL
);

---POPULATING INSTRUCTOR TABLE 
INSERT INTO INSTRUCTOR (INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL) VALUES (101, 'James', 'Willis', '0843569851', '7'); 
INSERT INTO INSTRUCTOR (INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL) VALUES (102, 'Sam', 'Wait', '0763698521', '2'); 
INSERT INTO INSTRUCTOR (INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL) VALUES (103, 'Sally', 'Gumede', '0786598521', '8'); 
INSERT INTO INSTRUCTOR (INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL) VALUES (104, 'Bob', 'Du Preez', '0796369857', '3'); 
INSERT INTO INSTRUCTOR (INS_ID, INS_FNAME, INS_SNAME, INS_CONTACT, INS_LEVEL) VALUES (105, 'Simon', 'Jones', '0826598741', '9'); 




CREATE TABLE CUSTOMER(
CUST_ID VARCHAR(50) PRIMARY KEY,
CUST_FMANE VARCHAR(50) NOT NULL,
CUST_SNAME VARCHAR(50) NOT NULL,
CUST_ADDRESS VARCHAR(50) NOT NULL,
CUST_CONTACT VARCHAR(50) NOT NULL

);

---POPULATING CUSTOMER TABLE 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C115', 'Heinrich', 'Willis', '3Main Road', '0821253659'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C116', 'Watson', 'David', '13 Cape Road', '0769658547'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C117', 'Smith', 'Waldo', '3 Mountain Road', '0863256574'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C118', 'Hanson', 'Alex', '8 Circle', '0762356587'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C119', 'Bitterhout', 'Kuhle', '15 Main Road', '0821235258'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C120', 'Zolani', 'Thando', '88 Summer Road', '0847541254'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C121', 'Jackson', 'Philip', '3 Long Road', '0745556658'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C122', 'Jones', 'Sarah', '7 Sea Road', '0814745745'); 
INSERT INTO CUSTOMER (CUST_ID, CUST_FMANE, CUST_SNAME, CUST_ADDRESS, CUST_CONTACT) VALUES ('C123', 'Howard', 'Catherine', '31 Lake Side Road', '0822232521'); 

CREATE TABLE DIVE(
DIVE_ID INT PRIMARY KEY,
DIVE_NAME VARCHAR(50) NOT NULL,
DIVE_DURATION VARCHAR(50) NOT NULL,
DIVE_LOCATION VARCHAR(50) NOT NULL,
DIVE_EXP_LEVEL VARCHAR(50) NOT NULL,
DIVE_COST VARCHAR(50) NOT NULL

);

--- POPULATING DIVE TABLE

INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (550, 'Shark Dive', '3 hours', 'Shark Point', '8', '500'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (551, 'Coral Dive', '1 hour', 'Break Point', '7', '300'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (552, 'Wave Crescent', '2 hours', 'Ship wreck ally', '3', '800'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (553, 'Underwater Exploration', '1 hour', 'Coral ally', '2', '250'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (554, 'Underwater Advanture', '3 hours', 'Sandy Beach', '3', '750'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (555, 'Deep Blue Ocean', '30 minutes', 'Lazy Waves', '2', '120'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (556, 'Rough Seas', '1 hour', 'Pipe', '9', '700'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (557, 'White Water', '2 hours', 'Drifts', '5', '200'); 
INSERT INTO DIVE (DIVE_ID, DIVE_NAME, DIVE_DURATION, DIVE_LOCATION, DIVE_EXP_LEVEL, DIVE_COST) VALUES (558, 'Current Adventure', '2 hours', 'Rock Lands', '3', '150');

CREATE TABLE DIVE_EVENT(
DIVE_EVENT_ID VARCHAR(50) PRIMARY KEY,
DIVE_DATE DATE NOT NULL,
DIVE_PARTICIPANTS INT NOT NULL,
PRIMARY KEY (INS_ID, CUST_ID, DIVE_ID, DIVE_EVENT_ID),
FOREIGN KEY (INS_ID) REFERENCES INSTRUCTOR(INS_ID),
FOREIGN KEY(CUST_ID) REFERENCES CUSTOMER(CUST_ID),
FOREIGN KEY (DIVE_ID) REFERENCES DIVE(DIVE_ID)
);

INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_101', '15-JUL-17', 5 , '0843569851', '7'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_102', '16-JUL-17', 7, '0763698521', '2'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_103', '18-JUL-17', 8, '0786598521', '8'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_104', '19-JUL-17', 3, '0796369857', '3'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_105', '21-JUL-17', 5, '0826598741', '9'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_106', '22-JUL-17', 8, '0763698521', '2'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_107', '25-JUL-17', 10, '0786598521', '8'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_108', '27-JUL-17', 5, '0796369857', '3'); 
INSERT INTO DIVE_EVENT (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) VALUES ('de_109', '28-JUL-17', 3, '0826598741', '9'); 

---QUESTION 2
--Use iso?

---QUESTION 3



---QUESTION 4


---QUESTION 5


---QUESTION 6
CREATE VIEW Vw_Dive_event AS 

SELECT  

    CONCAT(DIVE.DIVE_DATE, ' ', DIVE.DIVE_DURATION) AS Divedate, 

    CUSTOMER.CUST_ID, 

    INSTRUCTOR.INS_ID, 

    CUSTOMER.CUST_ADDRESS 

FROM  

    Customer  

    JOIN INSTRUCTOR ON DIVE.DIVE_DATE = INSTRUCTOR.DIVE_DATE 

    JOIN CUSTOMER ON INSTRUCTOR.CUST_ADDRESS = CUSTOMER.CUST_ADDRESS 

    JOIN CUSTOMER ON INSTRUCTOR.CUST_ID = CUSTOMER.CUST_ID; 
    

SELECT * FROM Vw_Dive_event; 



---QUESTION 7

CREATE OR REPLACE TRIGGER New_Dive_Event 

BEFORE INSERT ON DIVE_EVENT 

FOR EACH ROW 

BEGIN 

    IF :NEW.DIVE_PARTICIPANTS < 0 THEN 

        RAISE_APPLICATION_ERROR(-20001, 'Participants cannot be less than zero or less than zero'); 

    END IF; 

END; 

  



BEGIN 

    INSERT INTO Sales (DIVE_EVENT_ID, DIVE_DATE, DIVE_PARTICIPANTS, INS_ID, CUST_ID, DIVE_ID) 

    VALUES ('de_107', '25-JUL-17', 10, '0786598521', '8'); 

END; 


---QUESTION 8

CREATE OR REPLACE PROCEDURE sp_customer_details ( 

    CUST_ID IN DIVE_DATE_NUM%TYPE 

)  

IS 

    v_cust_id Customer.CUST_ID%TYPE; 

    v_cust_fname Customer.CUST_FNAME%TYPE; 

    v_cust_sname Customer.CUST_SNAME%TYPE; 

    v_cust_contact Customer.CUST_CONTACT%TYPE; 

BEGIN 

    SELECT Customer.CUST_ID, Customer.CUST_FNAME, Customer.CUST_SNAME, Customer.CUST_CONTACT 

    INTO v_cust_id, v_cust_fname, v_cust_sname, v_cust_contact 

    FROM DIVE_EVENT  

    JOIN Customer ON DIVE.CUST_ID = Customer.CUST_ID 

    WHERE DIVE.DATE_NUM = p_DATE_DATE; 

     

    DBMS_OUTPUT.PUT_LINE('Customer ID: ' || v_cust_id); 

    DBMS_OUTPUT.PUT_LINE('Customer First Name: ' || v_cust_fname); 

    DBMS_OUTPUT.PUT_LINE('Customer Surname: ' || v_cust_sname); 

    DBMS_OUTPUT.PUT_LINE('Customer Contact: ' || v_cust_contact); 

EXCEPTION 

    WHEN NO_DATA_FOUND THEN 

        DBMS_OUTPUT.PUT_LINE('No customer found for Sales Number ' || p_sales_num); 

    WHEN OTHERS THEN 

        DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM); 

END; 

  



BEGIN 

    sp_customer_details(101); 

END; 








---QUESTION 9


CREATE OR REPLACE FUNCTION fn_IT_Para ( 

    p_cust_id IN Customer.CUST_ID%TYPE 

)  

RETURN VARCHAR2  

IS 

    v_cust_name VARCHAR2(100); 

    v_DIVE_EXP_LEVEL VARCHAR2(50); 

    v_INS_LEVEL INSTRUCTOR.DIVE_DURATION%TYPE; 

    v_DIVE_PARTICIPANTS DIVE_EVENT.DIVE_PARTICIPANTS%TYPE; 

BEGIN 

    SELECT CONCAT(Customer.CUST_FNAME, ' ', Customer.CUST_SNAME), 

        DIVE.DIVE_EXP_LEVEL, 

        INSTRUCTOR.DIVE_DURATION, 

        DIVE_EVENT.DIVE_PARTICIPANTS

    INTO v_cust_name, v_INS_LEVEL , v_DIVE_PARTICIPANTS, v_DIVE_EXP_LEVEL

    FROM Customer  

    JOIN DIVE ON Customer.CUST_ID = DIVE.CUST_ID 

    JOIN INSTRUCTOR ON Sales.STOCK_ID = INSTRUCTOR.STOCK_ID 

    JOIN DIVE_EVENT ON INSTRUCTOR.DIVE_EVENT = DIVE_EVENT.REPAIR_ID 

    WHERE DIVE_EVENT.CUST_ID = p_cust_id; 

     

    RETURN 'Customer: ' || v_cust_name || ', Instructor ' || v_stock_type ||  

           ', Experience level: ' || v_sales_amount || ', Dive Participants ' || v_repair_work; 

EXCEPTION 

    WHEN NO_DATA_FOUND THEN 

        RETURN 'No data found for Customer ID ' || p_cust_id; 

    WHEN OTHERS THEN 

        RETURN 'An error occurred: ' || SQLERRM; 

END; 

  


DECLARE 

    result VARCHAR2(200); 

BEGIN 

    result := fn_IT_Gear('C121'); 

    DBMS_OUTPUT.PUT_LINE(result); 

END; 


 
---QUESTION 10



 



---QUESTION 11



 
